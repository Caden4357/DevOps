Tip: It’s good practice to keep a copy of the raw data you are using to extract the data you need.

By appending a date or time stamp to the file name, you can ensure it’s name is unique.
This builds a history of the weather forecasts which you can revisit at any time to recover from errors or expand the scope of your reports
Using the prescribed date format ensures that when you sort the files, they will be sorted chronologically. It also enables searching for the report for any given date.
If needed, you can compress and archive the files periodically. You can even automate this process by scheduling it.

Follow the steps below to download and save your report as a datestamped file named raw_data_<YYYYMMDD>, where <YYYYMMDD> is today’s date in Year, Month, Day format.
weather_report=raw_data_$(date +%Y%m%d) -> This command will create a file named raw_data_YYYYMMDD

Download the wttr.in weather report for Casablanca and save it with the filename you created
city=Casablanca -> This command will create a variable named city with the value Casablanca
curl wttr.in/$city --output $weather_report -> This command will download the weather report for Casablanca and save it with the filename you created

Let’s now return to extracting the temperature data of interest.
grep °C $weather_report > temperatures.txt -> This command will extract the temperature data from the weather report and save it to a file named temperatures.txt

Extract the current temperature, and store it in a shell variable called obs_tmp
obs_tmp=$(head -1 temperatures.txt | tr -s " " | xargs | rev | cut -d " " -f2 | rev) -> This command will extract the current temperature from the temperatures.txt file and store it in a variable named obs_tmp

Store the current hour, day, month, and year in corresponding shell variables
hour=$(TZ='Morocco/Casablanca' date -u +%H) 
day=$(TZ='Morocco/Casablanca' date -u +%d) 
month=$(TZ='Morocco/Casablanca' date +%m)
year=$(TZ='Morocco/Casablanca' date +%Y)

Merge the fields into a tab-delimited record, corresponding to a single row in Table 1.
record=$(echo -e "$year\t$month\t$day\t$hour\t$obs_tmp\t$fc_temp")
echo $record>>rx_poc.log